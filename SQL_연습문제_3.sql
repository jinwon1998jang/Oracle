/*
    날짜:2025/07/22
    이름:장진원
    내용:SQL 연습문제3
*/

--실습3-1
alter session set "_ORACLE_SCRIPT"=true;
create user bank identified by 1234;
grant connect,resource,unlimited tablespace to bank;

--실습3-2
create table CUSTOMER(
    C_ID varchar2(14) primary key not null,
    C_NAME varchar2(20) not null,
    C_TYPE number(1) not null,
    C_HP varchar2(14) not null,
    C_ADDR varchar2(100) default null
);
drop table ACCOUNT;
create table ACCOUNT (
    ACC_NO char(11) primary key not null,
    ACC_TYPE char(2) not null,
    ACC_NAME varchar2(20) not null,
    ACC_CID varchar2(14) not null,
    ACC_BALANCE number default 0,
    ACC_DATE date not null,
    FOREIGN key (acc_cid) references customer (c_id)
);
drop table TRANSACTION;
create table TRANSACTION (
    TR_NO number GENERATED BY DEFAULT AS IDENTITY primary key not null,
    TR_ACC char(11) not null,
    TR_TYPE number(1) not null,
    TR_AMOUNT number default 0 not null,
    TR_DATE date not null,
    FOREIGN key (TR_ACC) references ACCOUNT (ACC_NO)
);



--실습3-3
insert into customer values(
'730423-1000001','김유신',1,'010-1234-1001','경기도 수원시'
);
insert into customer values(
'750210-1000002','김춘추',1,'010-1234-1002','경기도 광주시'
);
insert into customer values(
'830513-2000003','선덕여왕',1,'010-1234-1003','서울시 마포구'
);
insert into customer values(
'870830-1000004','강감찬',1,'010-1234-1004','서울시 영등포구'
);
insert into customer values(
'910913-2000005','신사임당',1,'010-1234-1005','강원도 강릉시'
);
insert into customer values(
'941127-1000006','이순신',1,'010-1234-1006','부산시 영도구'
);

insert into customer values(
'220-83-52237','(주)한국전산',2,'03-1234-1045','서울시 강서구'
);
insert into customer values(
'361-23-42687','(주)정보산업',2,'031-563-1253','경기도 광명시'
);
insert into customer values(
'103-23-51094','부산의원',2,'051-518-1010','부산신 남구'
);

--------
insert into account values(
    '101-11-1001','S1','자유저축예금','730423-1000001',420000,'2005-07-21 12:10:03'
);
insert into account values(
    '101-13-1002','S2','정기적립예금','830513-2000003',1020000,'2011-05-13 13:20:12'
);
insert into account values(
    '101-11-1003','S1','장유저축예금','870830-1000004',53000,'2007-03-17 21:54:06'
);
insert into account values(
    '101-21-1004','L1','고객신용대출','910913-2000005',1200500,'2009-08-25 14:34:57'
);
insert into account values(
    '101-13-1005','S3','주택청약예금','941127-1000006',720800,'2013-10-15 19:56:34'
);
insert into account values(
    '101-23-1006','L2','예금담보대출','730423-1000001',250000,'2013-12-11 18:14:22'
);
insert into account values(
    '101-23-1007','L2','주택담보대출','750210-1000002',2700000,'2020-09-23 09:19:13'
);
insert into account values(
    '101-11-2001','S1','자유저축예금','220-83-52237',23000000,'2003-04-14 11:02:43'
);
insert into account values(
    '101-11-2002','S1','자유저축예금','361-23-42687',4201000,'2008-12-30 12:32:59'
);
insert into account values(
    '101-11-2003','S1','자유저축예금','103-23-51094',8325010,'2010-06-07 15:47:04'
);

-------------
insert into transaction values(
    1,'101-11-1001',1,50000,'2025-07-12 13:55:31'
);
insert into transaction values(
    2,'101-11-1003',1,120000,'2025-07-12 14:15:22'
);
insert into transaction values(
    3,'101-11-2001',2,300000,'2025-07-19 17:53:42'
);
insert into transaction values(
    4,'101-13-1002',1,1000000,'2025-07-20 07:25:08'
);
insert into transaction values(
    5,'101-11-1001',0,0,'2025-07-20 09:21:13'
);
insert into transaction values(
    6,'101-13-1005',1,200000,'2025-07-20 10:15:02'
);
insert into transaction values(
    7,'101-11-1001',1,450000,'2025-07-20 11:34:42'
);
insert into transaction values(
    8,'101-11-2002',2,32000,'2025-07-21 09:12:37'
);
insert into transaction values(
    9,'101-11-2003',0,0,'2025-07-21 16:02:31'
);
insert into transaction values(
    10,'101-11-1003',2,75000,'2025-07-21 17:41:11'
);

--실습3-4
select * from ACCOUNT;

--실습3-5
select * from CUSTOMER;

--실습3-6
select * from TRANSACTION where TR_TYPE!=0;

--실습3-7
select C_NAME,C_ID from CUSTOMER;

--실습3-8
select ACC_TYPE,ACC_NAME from ACCOUNT;

--실습3-9
select distinct ACC_TYPE,ACC_NAME from account;

--실습3-10
select * from account where ACC_BALANCE >=1000000;

--실습3-11
select * from CUSTOMER where C_ADDR like '경기도%';

--실습3-12
select * from CUSTOMER where C_TYPE=2;

--실습3-13
select * from TRANSACTION where TR_TYPE=1;

--실습3-14
select * from TRANSACTION where TR_TYPE=2 order by TR_AMOUNT;

--실습3-15
select sum(TR_AMOUNT) as 입급총합 ,avg(TR_AMOUNT) as 입금평균 from TRANSACTION where TR_TYPE=1;

--실습3-16
select max(TR_AMOUNT)as "큰 금액", min(TR_AMOUNT) as "작은 금액" from TRANSACTION where TR_TYPE=2;

--실습3-17
select * from ACCOUNT where ACC_BALANCE>1000000 order by ACC_BALANCE desc;

--실습3-18
select * from ACCOUNT where ACC_NAME like '%예금%' order by ACC_BALANCE desc;

--실습3-19
select * from TRANSACTION where TR_AMOUNT!=0
order by TR_TYPE,TR_AMOUNT DESC;

--실습3-20
SELECT
    COUNT(CASE WHEN TR_TYPE = 0 THEN 1 END) AS "조회 건수",
    COUNT(CASE WHEN TR_TYPE = 1 THEN 1 END) AS "입금 건수",
    COUNT(CASE WHEN TR_TYPE = 2 THEN 1 END) AS "출금 건수"
FROM TRANSACTION;

--실습3-21
select
    TR_TYPE,
    CASE
        WHEN TR_TYPE=0 THEN '조회'
        WHEN TR_TYPE=1 THEN '입금'
        WHEN TR_TYPE=2 THEN '출금'
    END AS "거래종류",
    TR_ACC,
    TR_AMOUNT
from TRANSACTION;
    
--실습3-22
/*SELECT TR_TYPE, COUNT(*) FROM TRANSACTION
group by TR_TYPE order by TR_TYPE;
*/
SELECT TR_TYPE, COUNT(TR_NO) FROM TRANSACTION
group by TR_TYPE order by TR_TYPE;

--실습3-23
SELECT
    TR_ACC,
    TR_TYPE,
    SUM(TR_AMOUNT) AS 합계
FROM TRANSACTION
WHERE TR_TYPE=1
GROUP BY TR_ACC,TR_TYPE
HAVING SUM(TR_AMOUNT)>100000 
ORDER BY SUM(TR_AMOUNT);

--실습3-24
SELECT
 TR_ACC,
 COUNT(*) AS 거래건수,
 SUM(TR_AMOUNT) AS 총거래금액
FROM TRANSACTION
WHERE TR_TYPE in(1,2)
GROUP BY TR_ACC
HAVING SUM(TR_AMOUNT)>100000
ORDER BY SUM(TR_AMOUNT)desc
OFFSET 1 ROWS FETCH NEXT 3 ROWS ONLY;

--실습3-25
select 
    ACC_NO,
    ACC_NAME,
    C_ID,
    C_NAME,
    ACC_BALANCE,
    ACC_DATE
from CUSTOMER c
join ACCOUNT a on c.C_ID=a.ACC_CID;

--실습3-26
select
    ACC_NO as "계좌번호",
    ACC_NAME as "계좌이름",
    ACC_CID as "주민번호(사업자번호)",
    C_NAME as "고객명",
    ACC_BALANCE as "현재잔액"
from ACCOUNT
join CUSTOMER on ACC_CID=C_ID
where ACC_BALANCE>1000000
order by ACC_BALANCE desc;
    

--실습3-27
select TR_NO,ACC_CID,TR_TYPE,TR_AMOUNT,TR_DATE
from TRANSACTION
join ACCOUNT on TR_ACC=ACC_NO;

--실습3-28
SELECT
a.acc_no,
c.C_NAME,
SUM(CASE WHEN t.TR_TYPE = 1 THEN t.TR_AMOUNT ELSE 0 END) AS 총입금액,
SUM(CASE WHEN t.TR_TYPE = 2 THEN t.TR_AMOUNT ELSE 0 END) AS 총출금액
FROM TRANSACTION t
 right JOIN ACCOUNT a ON t.TR_ACC = a.ACC_NO
JOIN CUSTOMER c ON a.ACC_CID = c.C_ID
WHERE c.C_TYPE = 1
GROUP BY a.acc_no, c.C_NAME;


--실습3-29
SELECT
    a.ACC_NO,
    a.ACC_CID,
    a.ACC_NAME,
    c.C_NAME,
    a.ACC_BALANCE +
        SUM(CASE WHEN t.TR_TYPE = 001 THEN t.TR_AMOUNT ELSE 0 END) -
        SUM(CASE WHEN t.TR_TYPE = 002 THEN t.TR_AMOUNT ELSE 0 END) AS 최종잔액
FROM
    ACCOUNT a
LEFT JOIN
    TRANSACTION t ON a.ACC_NO = t.TR_ACC
JOIN
    CUSTOMER c ON a.ACC_CID = c.C_ID
WHERE
    C_TYPE = 1
GROUP BY
    a.ACC_NO,
    a.ACC_CID,
    a.ACC_NAME,
    a.ACC_BALANCE,
    c.C_NAME
ORDER BY
    a.ACC_NO;
    
    
--실습3-30
SELECT
    c.C_NAME,
    a.ACC_NO,
    t.TOTAL_DEPOSIT,
    c.C_ADDR
FROM
    ACCOUNT a
    JOIN CUSTOMER c ON a.ACC_CID = c.C_ID
    JOIN (
        SELECT
             TR_ACC,
             SUM(TR_AMOUNT) AS TOTAL_DEPOSIT
        FROM TRANSACTION
        WHERE TR_TYPE = 1
        GROUP BY TR_ACC
        ) t ON a.ACC_NO = t.TR_ACC
WHERE
    t.TOTAL_DEPOSIT = (
        SELECT
            MAX(SUM_AMOUNT)
        FROM (
            SELECT
                TR_ACC,
                SUM(TR_AMOUNT) AS SUM_AMOUNT
            FROM TRANSACTION
            WHERE TR_TYPE = 1
            GROUP BY TR_ACC
        )
    );